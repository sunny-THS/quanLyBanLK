CREATE DATABASE QLBLK
GO
USE QLBLK
GO

CREATE TABLE LOAILK
(
	MALOAI VARCHAR(10) NOT NULL,
	TENLOAI NVARCHAR(50),
	CONSTRAINT PK_LOAILK PRIMARY KEY (MALOAI)
)
CREATE TABLE LINHKIEN
(
	MALK VARCHAR(10) NOT NULL,
	TENLK NVARCHAR(50),
	NGAYSX DATE,
	TGBH INT, -- thời gian bảo hành  >0 	tính bằng tháng
	MALOAI VARCHAR(10),
	NSX NVARCHAR(50), -- nhà sản xuất
	DVT NVARCHAR(30), -- đơn vị tính
	SOLUONGTONKHO INT, -- ck
	CONSTRAINT PK_LINHKIEN PRIMARY KEY (MALK),
	CONSTRAINT FK_LINHKIEN_LOAILK FOREIGN KEY (MALOAI)  REFERENCES LOAILK(MALOAI)
)
CREATE TABLE NHANVIEN
(
	MANV INT IDENTITY(1, 1) NOT NULL,
	TENNV NVARCHAR(50),
	NGAYSINH DATE,
	GIOITINH NVARCHAR(10),
	CONSTRAINT PK_NV PRIMARY KEY (MANV)
)
CREATE TABLE KHACHHANG
(
	MAKH INT IDENTITY(1, 1) NOT NULL,
	TENKH NVARCHAR(50) NOT NULL,
	DCHI NVARCHAR(MAX),
	DTHOAI VARCHAR(15),
	CONSTRAINT PK_KHACHHANG PRIMARY KEY (MAKH)
)
CREATE TABLE HOADON -- tổng kết hóa đơn xuất hàng
(
	MAHD VARCHAR(10) NOT NULL, -- default proc auto code
	NGAYHD DATE, -- default getdate()
	MAKH INT,
	MANV INT,
	TRIGIA MONEY, -- trigger (i, d, u)     df = 0
	CONSTRAINT PK_HOADON PRIMARY KEY (MAHD),
	CONSTRAINT FK_HOADON_KHACHHANG FOREIGN KEY (MAKH) REFERENCES KHACHHANG(MAKH),
	CONSTRAINT FK_HOADON_NV FOREIGN KEY (MANV) REFERENCES NHANVIEN(MANV)
)
CREATE TABLE CHITIETHD  -- bill
(
	MAHD VARCHAR(10) NOT NULL,
	MALK VARCHAR(10) NOT NULL,
	SOLUONG INT, -- check > 0
	DONGIA MONEY, -- check > 0
	CONSTRAINT PK_CHITIETHD PRIMARY KEY (MAHD,MALK),
	CONSTRAINT FK_CHITIETHD_HOADON FOREIGN KEY (MAHD) REFERENCES HOADON(MAHD),
	CONSTRAINT FK_CHITIETHD_LINHKIEN FOREIGN KEY (MALK) REFERENCES LINHKIEN(MALK)
)
CREATE TABLE DONGIA
(
	MALK CHAR(10) NOT NULL,
	NGAYCN DATE NOT NULL, --NGAY CAP NHAT
	GIA MONEY,
	CONSTRAINT PK_DG PRIMARY KEY (MALK, NGAYCN),
	CONSTRAINT FK_DG_LK  FOREIGN KEY (MALK) REFERENCES LINHKIEN(MALK)
)
CREATE TABLE PHIEUNHAP -- nhập hàng
(
	MAPN VARCHAR(10) NOT NULL, -- default auto code
	NGAYNHAP DATE, -- default getdate()
	TRIGIA MONEY, -- trigger (i, d, u)     df = 0
	CONSTRAINT PK_PN PRIMARY KEY (MAPN)
)
CREATE TABLE CHITIETPN
(
	MAPN VARCHAR(10) NOT NULL,
	MALK VARCHAR(10) NOT NULL,
	SOLUONG INT, -- check > 0
	DONGIA MONEY, -- check > 0
	CONSTRAINT PK_CTPN PRIMARY KEY (MAPN, MALK),
	CONSTRAINT FK_CTPN_LK FOREIGN KEY (MALK) REFERENCES LINHKIEN(MALK),
	CONSTRAINT FK_CTPN_PN FOREIGN KEY (MAPN) REFERENCES PHIEUNHAP(MAPN)
)

----------------------------------------------------------
--  ___   Proc                     _   ___   Func       --
-- | _ \_ _ ___  __   __ _ _ _  __| | | __|  _ _ _  __  --
-- |  _/ '_/ _ \/ _| / _` | ' \/ _` | | _| || | ' \/ _| --
-- |_| |_| \___/\__| \__,_|_||_\__,_| |_| \_,_|_||_\__| --
----------------------------------------------------------
GO
CREATE PROC GetMaKH @TenKH NVARCHAR(50)
-- Nếu tìm thấy tên khách hàng thì trả về mã khách hàng tương ứng ngược lại trả về 0
AS
	DECLARE @MaKH INT = 0
	IF EXISTS (SELECT MAKH FROM KHACHHANG WHERE TENKH=@TenKH)
		SELECT @MaKH=MAKH FROM KHACHHANG WHERE TENKH=@TenKH
	RETURN @MaKH
GO

CREATE PROC GetMaNV @TenNV NVARCHAR(50)
-- Nếu tìm thấy tên nhân viên thì trả về mã nhân viên tương ứng ngược lại trả về 0
AS
	DECLARE @MaNV INT = 0
	IF EXISTS (SELECT MaNV FROM NHANVIEN WHERE TENNV=@TenNV)
		SELECT @MaNV=MANV FROM NHANVIEN WHERE TENNV=@TenNV
	RETURN @MaNV
GO

CREATE PROC SLBanRa @MaLK VARCHAR(10), @NgayBan DATE
-- Cho biết số lượng được bán ra của linh kiện sản phẩm X trong ngày bán Y
AS
	DECLARE @SLBan INT

	IF NOT EXISTS(
		SELECT SUM(SOLUONG)
		FROM CHITIETHD CTHD JOIN HOADON HD
		ON CTHD.MAHD=HD.MAHD
		WHERE MALK=@MaLK AND NGAYHD=@NgayBan
	) RETURN 0

	SELECT @SLBan=SUM(SOLUONG)
	FROM CHITIETHD CTHD JOIN HOADON HD
		ON CTHD.MAHD=HD.MAHD
	WHERE MALK=@MaLK AND NGAYHD=@NgayBan

	RETURN @SLBan
GO

CREATE PROC SLTonKho @TenLK NVARCHAR(50)
-- GET số lượng linh kiện tồn kho
AS
	DECLARE @SL INT

	IF NOT EXISTS(
		SELECT SOLUONGTONKHO
		FROM LINHKIEN
		WHERE TENLK=@TenLK
	) RETURN -1

	SELECT @SL=SOLUONGTONKHO
	FROM LINHKIEN
	WHERE TENLK=@TenLK

	RETURN @SL
GO

CREATE PROC DoanhSoBanHang @MaKH INT
-- Lấy được doanh SÔ bán hàng thu được 1 khách hàng nào đó
AS
	DECLARE @TriGia MONEY
	SELECT @TriGia=SUM(TRIGIA)
	FROM HOADON
	WHERE MAKH=@MaKH

	IF @TriGia IS NULL
		SELECT 0 doanhSo
	ELSE SELECT @TriGia doanhSo
GO

-- CREATE PROC ThongTinLK @tenLK NVARCHAR(50)
-- -- show thông tin linh kiện dựa trên tên linh kiện
-- AS
-- 	SELECT MALK, TENLK, NGAYSX, TGBH, NSX
-- 	FROM LINHKIEN
-- 	WHERE TENLK=@tenLK
-- GO

-- CREATE OR ALTER PROC UD_DoanhThuNhanVien @nam INT
-- -- cập nhật doanh thu của nhân viên trong năm x
-- AS
-- 	UPDATE NHANVIEN
-- 	SET DOANHTHU = hd.DOANHTHU
-- 	FROM (
-- 		SELECT MANV, SUM(TRIGIA) DOANHTHU
-- 		FROM HOADON
-- 		WHERE YEAR(NGAYHD)=@nam
-- 		GROUP BY MANV
-- 	) hd
-- 	WHERE NHANVIEN.MANV=hd.MANV
-- GO

CREATE FUNCTION AUTO_IDHD()
RETURNS VARCHAR(10)
AS
BEGIN
	DECLARE @ID VARCHAR(10)

	IF (SELECT COUNT(MAHD) FROM HOADON) = 0
		SET @ID = '0'
	ELSE
		SELECT @ID = MAX(RIGHT(MAHD, 3)) FROM HOADON

	SELECT @ID = CASE
		WHEN @ID >=  0 and @ID < 9 THEN 'HD00' + CONVERT(CHAR, CONVERT(INT, @ID) + 1)
		WHEN @ID >=  9 THEN 'HD0' + CONVERT(CHAR, CONVERT(INT, @ID) + 1)
		WHEN @ID >= 99 THEN 'HD' + CONVERT(CHAR, CONVERT(INT, @ID) + 1)
	END

	RETURN @ID
END
GO

CREATE FUNCTION AUTO_IDPN()
RETURNS VARCHAR(10)
AS
BEGIN
	DECLARE @ID VARCHAR(10)

	IF (SELECT COUNT(MAPN) FROM PHIEUNHAP) = 0
		SET @ID = '0'
	ELSE
		SELECT @ID = MAX(RIGHT(MAPN, 3)) FROM PHIEUNHAP

	SELECT @ID = CASE
		WHEN @ID >=  0 and @ID < 9 THEN 'PN00' + CONVERT(CHAR, CONVERT(INT, @ID) + 1)
		WHEN @ID >=  9 THEN 'PN0' + CONVERT(CHAR, CONVERT(INT, @ID) + 1)
		WHEN @ID >= 99 THEN 'PN' + CONVERT(CHAR, CONVERT(INT, @ID) + 1)
	END

	RETURN @ID
END
GO

CREATE FUNCTION ShowTTLK ()
-- hiển thị tất cả thông tin linh kiện
RETURNS TABLE
AS
RETURN
	SELECT MALK, TENLK, TGBH, NSX
	FROM LINHKIEN
GO

-- tìm thông tin nhân viên

CREATE FUNCTION TimTTNhanVien (@tenNV NVARCHAR(50))
-- tìm thông tin của nhân viên dựa trên tên của nhân viên tương ứng
RETURNS @list TABLE (
	ID INT IDENTITY PRIMARY KEY,
	TENNV NVARCHAR(50),
	NGAYSINH DATE,
	GIOITINH NVARCHAR(10)
)
AS
BEGIN
	INSERT INTO @list
	SELECT TENNV, NGAYSINH, GIOITINH
	FROM NHANVIEN
	WHERE LOWER(TENNV) LIKE LOWER(RTRIM(@tenNV)) + '%'
	RETURN
END
GO

CREATE FUNCTION TimTTNhanVien_gender (@gender NVARCHAR(10))
-- tìm thông tin của nhân viên dựa giới tính
RETURNS @list TABLE (
	ID INT IDENTITY PRIMARY KEY,
	TENNV NVARCHAR(50),
	NGAYSINH DATE,
	GIOITINH NVARCHAR(10)
)
AS
BEGIN
	INSERT INTO @list
	SELECT TENNV, NGAYSINH, GIOITINH
	FROM NHANVIEN
	WHERE LOWER(GIOITINH) = LOWER(@gender)
	RETURN
END
GO

-- tìm thông tin linh kiện

CREATE FUNCTION TimTTLK_Ten (@tenLK NVARCHAR(50))
-- tìm thông tin của LINH KIỆN dựa trên tên của LINH KIỆN
RETURNS @list TABLE (
	ID INT IDENTITY PRIMARY KEY,
	MA VARCHAR(10),
	TENLK NVARCHAR(50),
	TGBH INT,
	NSX NVARCHAR(50)
)
AS
BEGIN
	INSERT INTO @list
	SELECT MALK, TENLK, TGBH, NSX
	FROM LINHKIEN
	WHERE LOWER(TENLK) LIKE LOWER(RTRIM(@tenLK)) + '%'
	RETURN
END
GO

CREATE FUNCTION TimTTLK_NSX (@tenNSX NVARCHAR(50))
-- tìm thông tin của LINH KIỆN dựa trên tên của nhà sản xuất
RETURNS @list TABLE (
	ID INT IDENTITY PRIMARY KEY,
	MA VARCHAR(10),
	TENLK NVARCHAR(50),
	TGBH INT,
	NSX NVARCHAR(50)
)
AS
BEGIN
	INSERT INTO @list
	SELECT MALK, TENLK, TGBH, NSX
	FROM LINHKIEN
	WHERE LOWER(NSX) = LOWER(@tenNSX)
	RETURN
END
GO

CREATE FUNCTION TimTTLK_LOAI (@tenLoaiLK NVARCHAR(50))
-- tìm thông tin của LINH KIỆN dựa trên loại sản phẩm
RETURNS @list TABLE (
	ID INT IDENTITY PRIMARY KEY,
	MA VARCHAR(10),
	TENLK NVARCHAR(50),
	TGBH INT,
	NSX NVARCHAR(50)
)
AS
BEGIN
	INSERT INTO @list
	SELECT MALK, TENLK, TGBH, NSX
	FROM LINHKIEN LK JOIN LOAILK LLK
		ON LK.MALOAI = LLK.MALOAI
	WHERE LOWER(TENLOAI) = LOWER(@tenLoaiLK)
	RETURN
END
GO

-- doanh thu

CREATE FUNCTION DOANHTHU_YEAR (@nam INT)
-- hiện thị doanh thu trong 1 năm @nam
RETURNS TABLE
AS
RETURN
	SELECT MAHD, MONTH(NGAYHD) THANG, TRIGIA, MAKH, MANV
	FROM HOADON
	WHERE YEAR(NGAYHD) = @nam
GO

CREATE FUNCTION GetDoanhThu_NV ()
-- hàm sẽ trả về tổng doanh thu của mỗi nhân viên
RETURNS @list TABLE
(
	ID INT IDENTITY PRIMARY KEY,
	TENNV NVARCHAR(50),
	DOANHTHU MONEY
)
AS
BEGIN
	DECLARE @DoanhThu MONEY
	DECLARE @TenNV NVARCHAR(50)

	DECLARE C_ThongKeDT CURSOR FOR
	SELECT TENNV, SUM(TRIGIA)
	FROM NHANVIEN NV LEFT JOIN HOADON HD
		ON NV.MANV=HD.MANV
	GROUP BY TENNV

	OPEN C_ThongKeDT

	FETCH NEXT FROM C_ThongKeDT INTO @TenNV, @DoanhThu

	WHILE @@FETCH_STATUS = 0
	BEGIN
		IF @DoanhThu IS NULL
			SET @DoanhThu = 0

		INSERT INTO @list
		SELECT @TenNV, @DoanhThu

		FETCH NEXT FROM C_ThongKeDT INTO @TenNV, @DoanhThu
	END
	CLOSE C_ThongKeDT
	DEALLOCATE C_ThongKeDT

	RETURN
END
GO

ALTER FUNCTION DoanhThu_NV_YEAR (@nam INT)
-- hàm sẽ trả về doanh thu của mỗi nhân viên đã đạt được trong năm @nam
RETURNS @list TABLE
(
	ID INT IDENTITY PRIMARY KEY,
	TENNV NVARCHAR(50),
	DOANHTHU MONEY
)
AS
BEGIN
	INSERT INTO @list
	SELECT TENNV, SUM(TRIGIA)
	FROM NHANVIEN NV JOIN DOANHTHU_YEAR(@nam) HD
		ON NV.MANV = HD.MANV
	GROUP BY TENNV
	RETURN
END
GO

CREATE FUNCTION GetDoanhThu_NV_YEAR (@nam INT)
-- hàm sẽ trả về doanh thu của mỗi nhân viên đạt được theo từng năm
RETURNS @list TABLE
(
	ID INT IDENTITY PRIMARY KEY,
	TENNV NVARCHAR(50),
	DOANHTHU MONEY
)
AS
BEGIN
	DECLARE @DoanhThu MONEY
	DECLARE @TenNV NVARCHAR(50)

	DECLARE C_ThongKeDT CURSOR FOR
	SELECT NV.TENNV, DOANHTHU
	FROM DoanhThu_NV_YEAR(@nam) TBT RIGHT JOIN NHANVIEN NV ON TBT.TENNV=NV.TENNV

	OPEN C_ThongKeDT

	FETCH NEXT FROM C_ThongKeDT INTO @TenNV, @DoanhThu

	WHILE @@FETCH_STATUS = 0
	BEGIN
		IF @DoanhThu IS NULL
			SET @DoanhThu = 0

		INSERT INTO @list
		SELECT @TenNV, @DoanhThu

		FETCH NEXT FROM C_ThongKeDT INTO @TenNV, @DoanhThu
	END
	CLOSE C_ThongKeDT
	DEALLOCATE C_ThongKeDT

	RETURN
END
GO

CREATE FUNCTION GetDoanhThu_EACH_MIY (@nam INT)
-- hàm sẽ trả về doanh thu của mỗi tháng trong năm @nam
RETURNS @list TABLE
(
	ID INT IDENTITY PRIMARY KEY,
	THANG INT,
	DOANHTHU MONEY
)
AS
BEGIN
	DECLARE @DoanhThu MONEY
	DECLARE @Month INT

	DECLARE C_ThongKeDT CURSOR FOR
	SELECT m, SUM(TRIGIA) DOANHTHU
	FROM DoanhThu_YEAR(@nam) dtn RIGHT JOIN (
	  SELECT m
	  FROM (VALUES (1), (2), (3), (4), (5), (6), (7), (8), (9), (10), (11), (12))
	    [1 to 12](m)
	) listMonth
	  ON dtn.THANG=listMonth.m
	GROUP BY m
	ORDER BY m


	OPEN C_ThongKeDT

	FETCH NEXT FROM C_ThongKeDT INTO @Month, @DoanhThu

	WHILE @@FETCH_STATUS = 0
	BEGIN
		IF @DoanhThu IS NULL
			SET @DoanhThu = 0

		INSERT INTO @list
		SELECT @Month, @DoanhThu

		FETCH NEXT FROM C_ThongKeDT INTO @Month, @DoanhThu
	END
	CLOSE C_ThongKeDT
	DEALLOCATE C_ThongKeDT

	RETURN
END
GO

-- tạo ràng buộc

ALTER TABLE LINHKIEN
ADD CONSTRAINT CK_TGBH CHECK (TGBH > 0)

ALTER TABLE HOADON
ADD CONSTRAINT CK_HOADON_TRIGIA CHECK (TRIGIA >= 0),
		CONSTRAINT DF_HOADON_TRIGIA DEFAULT 0 FOR TRIGIA,
		CONSTRAINT DF_HOADON_NGAYHD DEFAULT GETDATE() FOR NGAYHD

ALTER TABLE CHITIETHD
ADD CONSTRAINT CK_CHITIETHD_SOLUONG CHECK (SOLUONG > 0),
		CONSTRAINT CK_CHITIETHD_DONGIA CHECK (DONGIA > 0)

ALTER TABLE PHIEUNHAP
ADD CONSTRAINT CK_PHIEUNHAP_TRIGIA CHECK (TRIGIA >= 0),
		CONSTRAINT DF_PHIEUNHAP_TRIGIA DEFAULT 0 FOR TRIGIA

ALTER TABLE CHITIETPN
ADD CONSTRAINT CK_CHITIETPN_SOLUONG CHECK (SOLUONG > 0),
		CONSTRAINT CK_CHITIETPN_DONGIA CHECK (DONGIA > 0)

------------------------------------
--  _____    _        trigger     --
-- |_   _| _(_)__ _ __ _ ___ _ _  --
--   | || '_| / _` / _` / -_) '_| --
--   |_||_| |_\__, \__, \___|_|   --
--            |___/|___/          --
------------------------------------

-- xuất hàng
GO
CREATE TRIGGER DATHANG ON CHITIETHD
AFTER INSERT AS
BEGIN
	-- cập nhật số lượng tồn kho của linh kiện
	UPDATE LINHKIEN
	SET SOLUONGTONKHO = SOLUONGTONKHO - (
		SELECT SOLUONG
		FROM inserted
		WHERE MALK = LINHKIEN.MALK
	)
	FROM LINHKIEN JOIN inserted ON LINHKIEN.MALK = inserted.MALK
-----------------------------------------------------------------------
	-- cập nhật trị giá của bảng hóa đơn
	UPDATE HOADON
	SET TRIGIA = (
		SELECT SUM(SOLUONG*DONGIA)
		FROM CHITIETHD
		WHERE MAHD = HOADON.MAHD
	)
	FROM HOADON JOIN inserted ON HOADON.MAHD = inserted.MAHD
-----------------------------------------------------------------------
END

GO
CREATE TRIGGER HUYDATHANG ON CHITIETHD
AFTER DELETE AS
BEGIN
	-- cập nhật số lượng tồn kho của linh kiện
	UPDATE LINHKIEN
	SET SOLUONGTONKHO = SOLUONGTONKHO + (
		SELECT SOLUONG
		FROM deleted
		WHERE MALK = LINHKIEN.MALK
	)
	FROM LINHKIEN JOIN deleted ON LINHKIEN.MALK = deleted.MALK
-----------------------------------------------------------------------
	-- cập nhật trị giá của bảng hóa đơn
	UPDATE HOADON
	SET TRIGIA = (
		SELECT SUM(SOLUONG*DONGIA)
		FROM CHITIETHD
		WHERE MAHD = HOADON.MAHD
	)
	FROM HOADON JOIN deleted ON HOADON.MAHD = deleted.MAHD
-----------------------------------------------------------------------
END

GO
CREATE TRIGGER CAPNHAPDATHANG ON CHITIETHD
AFTER UPDATE AS
BEGIN
	-- cập nhật số lượng tồn kho của linh kiện
	UPDATE LINHKIEN
	SET SOLUONGTONKHO = SOLUONGTONKHO -
		(SELECT SOLUONG FROM inserted WHERE MALK = LINHKIEN.MALK) +
		(SELECT SOLUONG FROM deleted WHERE MALK = LINHKIEN.MALK)
	FROM LINHKIEN JOIN deleted ON LINHKIEN.MALK = deleted.MALK
-----------------------------------------------------------------------
	-- cập nhật trị giá của bảng hóa đơn
	UPDATE HOADON
	SET TRIGIA = (
		SELECT SUM(SOLUONG*DONGIA)
		FROM CHITIETHD
		WHERE MAHD = HOADON.MAHD
	)
	FROM HOADON JOIN deleted ON HOADON.MAHD = deleted.MAHD
-----------------------------------------------------------------------
END

-- nhập hàng
GO
CREATE TRIGGER NHAPHANG ON CHITIETPN
AFTER INSERT AS
BEGIN
	-- cập nhật số lượng tồn kho của linh kiện
	UPDATE LINHKIEN
	SET SOLUONGTONKHO = SOLUONGTONKHO + (
		SELECT SOLUONG
		FROM inserted
		WHERE MALK = LINHKIEN.MALK
	)
	FROM LINHKIEN JOIN inserted ON LINHKIEN.MALK = inserted.MALK
-----------------------------------------------------------------------
	-- cập nhật trị giá của bảng phiếu nhập
	UPDATE PHIEUNHAP
	SET TRIGIA = (
		SELECT SUM(SOLUONG*DONGIA)
		FROM CHITIETPN
		WHERE MAPN = PHIEUNHAP.MAPN
	)
	FROM PHIEUNHAP JOIN inserted ON PHIEUNHAP.MAPN = inserted.MAPN
-----------------------------------------------------------------------
END

GO
CREATE TRIGGER HUYNHAPHANG ON CHITIETPN
AFTER DELETE AS
BEGIN
	-- cập nhật số lượng tồn kho của linh kiện
	UPDATE LINHKIEN
	SET SOLUONGTONKHO = SOLUONGTONKHO - (
		SELECT SOLUONG
		FROM deleted
		WHERE MALK = LINHKIEN.MALK
	)
	FROM LINHKIEN JOIN deleted ON LINHKIEN.MALK = deleted.MALK
-----------------------------------------------------------------------
	-- cập nhật trị giá của bảng phiếu nhập
	UPDATE PHIEUNHAP
	SET TRIGIA = (
		SELECT SUM(SOLUONG*DONGIA)
		FROM CHITIETPN
		WHERE MAPN = PHIEUNHAP.MAPN
	)
	FROM PHIEUNHAP JOIN deleted ON PHIEUNHAP.MAPN = deleted.MAPN
-----------------------------------------------------------------------
END

GO
CREATE TRIGGER CAPNHAPNHAPHANG ON CHITIETPN
AFTER UPDATE AS
BEGIN
	-- cập nhật số lượng tồn kho của linh kiện
	UPDATE LINHKIEN
	SET SOLUONGTONKHO = SOLUONGTONKHO +
		(SELECT SOLUONG FROM inserted WHERE MALK = LINHKIEN.MALK) -
		(SELECT SOLUONG FROM deleted WHERE MALK = LINHKIEN.MALK)
	FROM LINHKIEN JOIN deleted ON LINHKIEN.MALK = deleted.MALK
-----------------------------------------------------------------------
	-- cập nhật trị giá của bảng phiếu nhập
	UPDATE PHIEUNHAP
	SET TRIGIA = (
		SELECT SUM(SOLUONG*DONGIA)
		FROM CHITIETPN
		WHERE MAPN = PHIEUNHAP.MAPN
	)
	FROM PHIEUNHAP JOIN deleted ON PHIEUNHAP.MAPN = deleted.MAPN
-----------------------------------------------------------------------
END
GO

CREATE TRIGGER CK_GIA ON CHITIETHD
FOR INSERT
AS
BEGIN
	DECLARE @maHD CHAR(10), @maLK CHAR(10), @giaBan MONEY
	SELECT @maHD=MAHD, @maLK=MALK FROM inserted

	SELECT TOP(1) @giaBan=GIA FROM DONGIA WHERE MALK=@maLK ORDER BY NGAYCN DESC

	UPDATE CHITIETHD
	SET GIABAN = @giaBan
	WHERE MAHD=@maHD AND MALK=@maLK
END
GO

--------------------------------
--  ___           _   data    --
-- |   \   __ _  | |_   __ _  --
-- | |) | / _` | |  _| / _` | --
-- |___/  \__,_|  \__| \__,_| --
--------------------------------
INSERT LOAILK VALUES ('MOU', N'Chuột')
INSERT LOAILK VALUES ('LAP', N'Máy tính sách tay')
INSERT LOAILK VALUES ('CPU', N'Bộ xử lí')
INSERT LOAILK VALUES ('PCX', N'Máy tính để bàn')
INSERT LOAILK VALUES ('MAI', N'Mainboard')
INSERT LOAILK VALUES ('KEYB', N'Bàn phím')
INSERT LOAILK VALUES ('HP', N'Tai nghe')
INSERT LOAILK VALUES ('SCREEN', N'Màn hình')
INSERT LOAILK VALUES ('PROJ', N'Máy chiếu')

SET DATEFORMAT DMY
INSERT LINHKIEN VALUES ('SCREEN001', N'Màn hình máy tính ASUS', '20/10/2018', 12, 'SCREEN', 'ASUS', N'Cái', 20)
INSERT LINHKIEN VALUES ('SCREEN002', N'Màn hình máy tính DELL', '12/04/2018', 12, 'SCREEN', 'DELL', N'Cái', 15)
INSERT LINHKIEN VALUES ('MOU001', N'ChUột có dây LOGITECH', '19/06/2019', 6, 'MOU', 'LOGITECH', N'Cái', 34)
INSERT LINHKIEN VALUES ('MOU002', N'ChUột không dây LOGITECH', '19/06/2019', 6, 'MOU', 'LOGITECH', N'Cái', 10)
INSERT LINHKIEN VALUES ('MAI001', N'Mainboard ASUS', '17/5/2020', 12, 'MAI', 'ASUS', N'Cái', 27)
INSERT LINHKIEN VALUES ('MAI002', N'Mainboard ATXX', '16/6/2020', 12, 'MAI', 'ATXX', N'Cái', 12)
INSERT LINHKIEN VALUES ('CPU001', N'CPU Itel', '28/10/2018', 12, 'CPU', 'Itel', N'Cái', 10)
INSERT LINHKIEN VALUES ('KEYB001', N'Bàn phím LOGITECH', '20/10/2018', 6, 'KEYB', 'LOGITECH', N'Cái', 4)
INSERT LINHKIEN VALUES ('HP001', N'Tai nghe SONY', '4/6/2019', 12, 'HP', 'SONY', N'Cái', 20)
INSERT LINHKIEN VALUES ('PROJ001', N'Máy chiếu DELL', '20/10/2018', 12, 'PROJ', 'DELL', N'Cái', 10)
INSERT LINHKIEN VALUES ('PROJ002', N'Máy chiếu HP', '20/10/2018', 12, 'PROJ', 'HP', N'Cái', 10)
INSERT LINHKIEN VALUES ('PCX001', N'ASUS 20144', '20/10/2018', 12, 'PCX', 'ASUS', N'Cái', 5)

INSERT KHACHHANG (TENKH, DCHI, DTHOAI) VALUES (N'Nguyễn Thu Tâm', N'Tây Ninh', '0989751723')
INSERT KHACHHANG (TENKH, DCHI, DTHOAI) VALUES (N'Đinh Bảo Lộc', N'Lâm Đồng', '0918234654')
INSERT KHACHHANG (TENKH, DCHI, DTHOAI) VALUES (N'Trần Thanh Diệu', N'TP.HCM', '0978123765')
INSERT KHACHHANG (TENKH, DCHI, DTHOAI) VALUES (N'Hồ Trấn Thành', N'Hà Nội', '0909456768')
INSERT KHACHHANG (TENKH, DCHI, DTHOAI) VALUES (N'Huỳnh Kim Ánh', N'Khánh Hòa', '0932987567')

SET DATEFORMAT MDY
INSERT NHANVIEN (TENNV, NGAYSINH, GIOITINH) VALUES (N'Nguyễn Kim Ngọc', '4/11/1997', N'Nữ')
INSERT NHANVIEN (TENNV, NGAYSINH, GIOITINH) VALUES (N'Trần Đinh Bảo', '11/12/2001', N'Nam')
INSERT NHANVIEN (TENNV, NGAYSINH, GIOITINH) VALUES (N'Nguyễn Bảo Quyên', '5/1/1997', N'Nam')
INSERT NHANVIEN (TENNV, NGAYSINH, GIOITINH) VALUES (N'Lê Hồng Hà', '12/2/2000', N'Nữ')
INSERT NHANVIEN (TENNV, NGAYSINH, GIOITINH) VALUES (N'Trần Thành Công', '5/21/1998', N'Nam')
INSERT NHANVIEN (TENNV, NGAYSINH, GIOITINH) VALUES (N'Huỳnh Thu Hà', '2/25/2000', N'Nữ')
INSERT NHANVIEN (TENNV, NGAYSINH, GIOITINH) VALUES (N'Trương Thị My My', '4/24/1998', N'Nữ')
INSERT NHANVIEN (TENNV, NGAYSINH, GIOITINH) VALUES (N'Trần Bảo Quân', '5/2/1999', N'Nam')
INSERT NHANVIEN (TENNV, NGAYSINH, GIOITINH) VALUES (N'Võ Thị Thanh Hà', '1/1/2001', N'Nữ')
INSERT NHANVIEN (TENNV, NGAYSINH, GIOITINH) VALUES (N'Lý Yến Nhi', '5/15/1998', N'Nữ')

SET DATEFORMAT DMY
INSERT HOADON (MAHD, NGAYHD, MAKH, MANV) VALUES ('HD001', '3/4/2020', 1, 1)
INSERT HOADON (MAHD, NGAYHD, MAKH, MANV) VALUES ('HD002', '13/5/2020', 1, 2)
INSERT HOADON (MAHD, NGAYHD, MAKH, MANV) VALUES ('HD003', '23/9/2020', 1, 3)
INSERT HOADON (MAHD, NGAYHD, MAKH, MANV) VALUES ('HD004', '13/2/2020', 2, 4)
INSERT HOADON (MAHD, NGAYHD, MAKH, MANV) VALUES ('HD005', '22/7/2020', 3, 5)
INSERT HOADON (MAHD, NGAYHD, MAKH, MANV) VALUES ('HD006', '15/10/2020', 4, 6)
INSERT HOADON (MAHD, NGAYHD, MAKH, MANV) VALUES ('HD007', '25/10/2020', 4, 7)
INSERT HOADON (MAHD, NGAYHD, MAKH, MANV) VALUES ('HD008', '17/12/2020', 5, 1)

INSERT CHITIETHD VALUES ('HD001', 'SCREEN001', 2, 12000000)
INSERT CHITIETHD VALUES ('HD002', 'MOU002', 3, 560000)
INSERT CHITIETHD VALUES ('HD003', 'MAI002', 5, 22000000)
INSERT CHITIETHD VALUES ('HD004', 'CPU001', 10, 27000000)
INSERT CHITIETHD VALUES ('HD005', 'KEYB001', 1, 5000000)
INSERT CHITIETHD VALUES ('HD006', 'HP001', 6, 7500000)
INSERT CHITIETHD VALUES ('HD007', 'PCX001', 12, 340000000)
INSERT CHITIETHD VALUES ('HD008', 'PROJ002', 9, 15000000)

SET DATEFORMAT DMY
INSERT DONGIA VALUES ('SCREEN001', '1/1/2020', )
INSERT DONGIA VALUES ('SCREEN002', '1/1/2020', )
INSERT DONGIA VALUES ('MOU001', '1/1/2020', )
INSERT DONGIA VALUES ('MOU002', '1/1/2020', )
INSERT DONGIA VALUES ('MAI001', '1/1/2020', )
INSERT DONGIA VALUES ('MAI002', '1/1/2020', )
INSERT DONGIA VALUES ('CPU001', '1/1/2020', )
INSERT DONGIA VALUES ('KEYB001', '1/1/2020', )
INSERT DONGIA VALUES ('HP001', '1/1/2020', )
INSERT DONGIA VALUES ('PROJ001', '1/1/2020', )
INSERT DONGIA VALUES ('PROJ002', '1/1/2020', )
INSERT DONGIA VALUES ('PCX001', '1/1/2020', )

SET DATEFORMAT DMY
INSERT PHIEUNHAP (MAPN, NGAYNHAP) VALUES ('PN001', '16/12/2019')
INSERT PHIEUNHAP (MAPN, NGAYNHAP) VALUES ('PN002', '16/12/2019')
INSERT PHIEUNHAP (MAPN, NGAYNHAP) VALUES ('PN003', '24/12/2019')
INSERT PHIEUNHAP (MAPN, NGAYNHAP) VALUES ('PN004', '12/11/2019')
INSERT PHIEUNHAP (MAPN, NGAYNHAP) VALUES ('PN005', '13/12/2019')
INSERT PHIEUNHAP (MAPN, NGAYNHAP) VALUES ('PN006', '8/12/2019')
INSERT PHIEUNHAP (MAPN, NGAYNHAP) VALUES ('PN007', '22/12/2019')
INSERT PHIEUNHAP (MAPN, NGAYNHAP) VALUES ('PN008', '17/12/2019')

INSERT CHITIETPN VALUES ('PN001', 'SCREEN001', 20, 120000000)
INSERT CHITIETPN VALUES ('PN002', 'MOU002', 30, 5600000)
INSERT CHITIETPN VALUES ('PN003', 'MAI002', 50, 220000000)
INSERT CHITIETPN VALUES ('PN004', 'CPU001', 26, 270000000)
INSERT CHITIETPN VALUES ('PN005', 'KEYB001', 10, 50000000)
INSERT CHITIETPN VALUES ('PN006', 'HP001', 60, 75000000)
INSERT CHITIETPN VALUES ('PN007', 'PCX001', 70, 3400000000)
INSERT CHITIETPN VALUES ('PN008', 'PROJ002', 20, 150000000)
